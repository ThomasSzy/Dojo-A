// C++ code
//Thomas Szymuda 1d Tercer Nivel
//LEDS
#define	LED_ROJO_1  13
#define	LED_AMARILLO_1  12
#define	LED_VERDE_1  11

#define	LED_ROJO_2  3
#define	LED_AMARILLO_2  4
#define	LED_VERDE_2  5
//TIEMPOS
#define tiempo_apagado 500 
#define tiempo_prendido 5000
#define tiempo_prendido_amarillo  3000
//SONIDO
#define sonido_rancio 2
//BOTON
#define BOTON_ALARGUE 10
void setup()
{
  pinMode(LED_ROJO_1, OUTPUT);
  pinMode(LED_AMARILLO_1, OUTPUT);
  pinMode(LED_VERDE_1, OUTPUT);
  //
  pinMode(LED_ROJO_2, OUTPUT);
  pinMode(LED_AMARILLO_2, OUTPUT);
  pinMode(LED_VERDE_2, OUTPUT);
  
 //
  pinMode(sonido_rancio,OUTPUT);
  pinMode(BOTON_ALARGUE,INPUT);
  Serial.begin(9600);
}

void loop()
{
  //PRENDE VERDE ROJO Y TITILA VERDE PARA CAMBIO
  //PRENDE ROJO NUEVAMENTE PARA QUEDAR PARADO
  prender_rojo(LED_ROJO_1,LED_VERDE_2);
  titilar(LED_VERDE_2);
  
  
  //PRENDE AMARILLO TITILA AMARILLO Y ROJO Y SE CAMBIA SEMAFORO
  prender_amarillo(LED_AMARILLO_2);
  titilar(LED_AMARILLO_2);
  titilar(LED_ROJO_1);
  
  //PRENDE ROJO 2 Y VERDE 1, APAGA ROJO 1 Y PRENDE AMARILL
  prender_rojo(LED_ROJO_2);
  apagar_rojo(LED_ROJO_1);
  //
  prender_amarillo(LED_AMARILLO_1);
  titilar(LED_AMARILLO_1);
  //
  prender_rojo(LED_ROJO_2,LED_VERDE_1);
  titilar(LED_VERDE_1);
  //
  prender_rojo(LED_ROJO_2);
  prender_amarillo(LED_AMARILLO_1);
  titilar(LED_AMARILLO_1);
  apagar_rojo(LED_ROJO_2);
  //
  prender_rojo(LED_ROJO_1);
  prender_amarillo(LED_AMARILLO_2);
  titilar(LED_AMARILLO_2);
  prender_rojo(LED_ROJO_1,LED_VERDE_2);
  
 
  
  
}

void prender_rojo(int led_prender_rojo, int led_prender_verde)
{
//melodia
  digitalWrite(led_prender_verde, HIGH);
  digitalWrite(led_prender_rojo, HIGH);
  	int melody[] = {262, 294, 330, 349, 392};
  int duration = 1000;
  for (int i = 0; i < 5; i++) {
    tone(sonido_rancio, melody[i]);
    delay(duration);
    noTone(sonido_rancio);
    delay(duration / 10);
  }
  digitalWrite(led_prender_verde, LOW);
  alargue();
  delay(tiempo_apagado);
  Serial.println("prende y apaga rojo");	
}
void prender_amarillo(int led_prender_amarillo)
{
  
  digitalWrite(led_prender_amarillo, HIGH); 
  int melody[] = {262, 262};
  int duration = 1000;
  for (int i = 0; i < 2; i++) {
    tone(sonido_rancio, melody[i]);
    delay(duration);
    noTone(sonido_rancio);
    delay(duration / 10);
  }
  digitalWrite(led_prender_amarillo, LOW); 
  delay(tiempo_apagado);
  Serial.println("prende y apaga amarillo");

}
void prender_verde(int led_prender_verde)
{
  digitalWrite(led_prender_verde, HIGH);
  alargue();
  delay(tiempo_prendido);
  digitalWrite(led_prender_verde, LOW);
  delay(tiempo_apagado); 
  
  Serial.println("prende y apaga verde");
}
void titilar(int led_titilar)
{
  digitalWrite(led_titilar, HIGH);
  delay(275);
  digitalWrite(led_titilar, LOW);
  delay(275);
  digitalWrite(led_titilar, HIGH);
  delay(275);
  digitalWrite(led_titilar, LOW);
  delay(275);
  digitalWrite(led_titilar, HIGH);
  delay(275);
  digitalWrite(led_titilar, LOW);
  Serial.println("Titila");
}
void alargue()
{
int apretoBoton;
apretoBoton=digitalRead(BOTON_ALARGUE);
Serial.println("Toco boton");
if(apretoBoton==0)
{
  delay(5000); 
}
Serial.println("Toco boton");
}
void prender_rojo(int prender_rojo)
{
  digitalWrite(prender_rojo, HIGH);
}

void apagar_rojo(int apagado_rojo)
{
  digitalWrite(apagado_rojo, LOW);
}
